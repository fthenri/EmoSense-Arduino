import serial
import time
import os
import tkinter as tk
from tkinter import Label
from PIL import Image, ImageTk
import threading
import pygame

# Configuração da porta serial
ser = serial.Serial('COM6', 9600, timeout=1)

# Inicializa o mixer de som
pygame.mixer.init()

# Função para mostrar imagem
def show_image(image_path):
    img = Image.open(image_path)
    img = img.resize((250, 250), Image.LANCZOS)
    img_tk = ImageTk.PhotoImage(img)
    panel.configure(image=img_tk)
    panel.image = img_tk
    print(f"Mostrando imagem: {image_path}")

# Função para tocar som
def play_sound(sound_path):
    pygame.mixer.music.load(sound_path)
    pygame.mixer.music.play()

# Função para ler os dados da serial e atualizar a interface
selected_image = None

def read_serial():
    global selected_image
    while True:
        if ser.in_waiting > 0:
            data = ser.readline().decode('utf-8').strip()
            if data:
                print(f"Received: {data}")
                if data == "btn1":
                    if selected_image == "btn1":
                        play_sound(r"C:\path\to\confirmation_sound.mp3")
                    else:
                        show_image(r"C:\path\to\image1.jpg")
                        selected_image = "btn1"
                elif data == "btn2":
                    if selected_image == "btn2":
                        play_sound(r"C:\path\to\confirmation_sound.mp3")
                    else:
                        show_image(r"C:\path\to\image2.jpg")
                        selected_image = "btn2"
                elif data == "btn3":
                    if selected_image == "btn3":
                        play_sound(r"C:\path\to\confirmation_sound.mp3")
                    else:
                        show_image(r"C:\path\to\image3.png")
                        selected_image = "btn3"
                elif data == "btn4":
                    if selected_image == "btn4":
                        play_sound(r"C:\path\to\confirmation_sound.mp3")
                    else:
                        show_image(r"C:\path\to\image4.png")
                        selected_image = "btn4"

# Função para verificar a conexão com o Arduino
def verify_arduino_connection():
    ser.write(b'ping\n')
    start_time = time.time()
    while True:
        if ser.in_waiting > 0:
            response = ser.readline().decode('utf-8').strip()
            if response == "pong":
                print("Arduino está funcionando corretamente.")
                return True
        if time.time() - start_time > 5:  # Timeout de 5 segundos
            print("Falha ao conectar com o Arduino.")
            return False

# Inicializa a interface gráfica
root = tk.Tk()
root.title("Interface Serial com Tkinter")

# Configura o painel para mostrar imagens
panel = Label(root)
panel.pack(side="bottom", fill="both", expand="yes")

if __name__ == "__main__":
    print("Verificando conexão com o Arduino...")
    time.sleep(2)  # Tempo para garantir que a conexão serial esteja estável
    
    if verify_arduino_connection():
        # Inicia a leitura dos dados da serial em um thread separado para não bloquear a interface
        thread = threading.Thread(target=read_serial)
        thread.daemon = True
        thread.start()
        
        # Inicia o loop principal da interface Tkinter
        root.mainloop()
    else:
        print("Encerrando o programa devido à falha na conexão com o Arduino.")
